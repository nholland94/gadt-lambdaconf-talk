// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Caml_string = require("bs-platform/lib/js/caml_string.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var S$BsSpectacle = require("bs-spectacle/src/components/S.js");
var ExpMl = require("../prov/exp.ml");
var VectMl = require("../prov/vect.ml");
var HlistMl = require("../prov/hlist.ml");
var PeanoMl = require("../prov/peano.ml");
var Deck$BsSpectacle = require("bs-spectacle/src/components/Deck.js");
var List$BsSpectacle = require("bs-spectacle/src/components/List.js");
var Text$BsSpectacle = require("bs-spectacle/src/components/Text.js");
var BbtreeMl = require("../prov/bbtree.ml");
var Notes$BsSpectacle = require("bs-spectacle/src/components/Notes.js");
var Slide$BsSpectacle = require("bs-spectacle/src/components/Slide.js");
var Heading$BsSpectacle = require("bs-spectacle/src/components/Heading.js");
var Take_fiveMl = require("../prov/take_five.ml");
var ListItem$BsSpectacle = require("bs-spectacle/src/components/ListItem.js");
var Vect_reduceMl = require("../prov/vect_reduce.ml");
var CodeSlide$ReactTemplate = require("./CodeSlide.bs.js");
var Validation_multiMl = require("../prov/validation_multi.ml");
var Validation_singleMl = require("../prov/validation_single.ml");
var SpectacleTheme$ReactTemplate = require("./SpectacleTheme.bs.js");
var Btree_adt_exampleDotPng = require("../prov/btree_adt_example.dot.png");

function s(prim) {
  return prim;
}

var Image = /* module */[];

function make(code, _children) {
  var init = ReasonReact.statelessComponent("Code");
  return /* record */[
          /* debugName */init[/* debugName */0],
          /* reactClassInternal */init[/* reactClassInternal */1],
          /* handedOffState */init[/* handedOffState */2],
          /* willReceiveProps */init[/* willReceiveProps */3],
          /* didMount */init[/* didMount */4],
          /* didUpdate */init[/* didUpdate */5],
          /* willUnmount */init[/* willUnmount */6],
          /* willUpdate */init[/* willUpdate */7],
          /* shouldUpdate */init[/* shouldUpdate */8],
          /* render */(function (_self) {
              return ReasonReact.element(undefined, undefined, CodeSlide$ReactTemplate.make("ocaml", code.source, code.ranges, true, undefined, /* array */[]));
            }),
          /* initialState */init[/* initialState */10],
          /* retainedProps */init[/* retainedProps */11],
          /* reducer */init[/* reducer */12],
          /* jsElementWrapped */init[/* jsElementWrapped */13]
        ];
}

var Code = /* module */[/* make */make];

function string_fold(f, init, str) {
  var length = str.length;
  var _acc = init;
  var _i = 0;
  while(true) {
    var i = _i;
    var acc = _acc;
    if (i >= length) {
      return acc;
    } else {
      _i = i + 1 | 0;
      _acc = Curry._2(f, acc, Caml_string.get(str, i));
      continue ;
    }
  };
}

function f(acc, c) {
  if (c === /* "\n" */10) {
    return acc + 1 | 0;
  } else {
    return acc;
  }
}

function count_lines(param) {
  return string_fold(f, 1, param);
}

function cons(title, image, source) {
  var tmp = {
    loc: /* array */[
      0,
      string_fold(f, 1, source)
    ],
    title: title
  };
  if (image !== undefined) {
    tmp.image = Caml_option.valFromOption(image);
  }
  var ranges = /* array */[tmp];
  return ReasonReact.element(undefined, undefined, CodeSlide$ReactTemplate.make("ocaml", source + "\n", ranges, true, undefined, /* array */[]));
}

var InlineCode = /* module */[
  /* string_fold */string_fold,
  /* count_lines */count_lines,
  /* cons */cons
];

function make$1(_children) {
  var init = ReasonReact.statelessComponent("Presentation");
  return /* record */[
          /* debugName */init[/* debugName */0],
          /* reactClassInternal */init[/* reactClassInternal */1],
          /* handedOffState */init[/* handedOffState */2],
          /* willReceiveProps */init[/* willReceiveProps */3],
          /* didMount */init[/* didMount */4],
          /* didUpdate */init[/* didUpdate */5],
          /* willUnmount */init[/* willUnmount */6],
          /* willUpdate */init[/* willUpdate */7],
          /* shouldUpdate */init[/* shouldUpdate */8],
          /* render */(function (_self) {
              return ReasonReact.element(undefined, undefined, Deck$BsSpectacle.make(false, undefined, undefined, undefined, /* pacman */-476456824, Caml_option.some(SpectacleTheme$ReactTemplate.t), /* array */[/* Slide */0], undefined, undefined, undefined, /* array */[
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                        ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, "black", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, 1, undefined, undefined, /* array */["GADTs and You"])),
                                        ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, 2, undefined, undefined, /* array */["Writing Safer Code Using GADTs"])),
                                        ReasonReact.element(undefined, undefined, Text$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, S$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* italic */107228912, /* array */["Nathan Holland"]))])),
                                        ReasonReact.element(undefined, undefined, Notes$BsSpectacle.make(/* array */[React.createElement("ul", undefined, React.createElement("li", undefined, "self introduction"))]))
                                      ])),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                        ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, "black", undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, 1, undefined, undefined, /* array */["GADT"])),
                                        ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, 2, undefined, undefined, /* array */["Generalized Algebraic Data Type"])),
                                        ReasonReact.element(undefined, undefined, Notes$BsSpectacle.make(/* array */[React.createElement("ul", undefined, React.createElement("li", undefined, "GADT = Generalized Algebraic Data Type"), React.createElement("li", undefined, "GADTs provide a way to reason about types on a per constructor basis (if you don't know what this means, don't worry; we'll build it up)"), React.createElement("li", undefined, "GADTs are available for use in Haskell and OCaml"), React.createElement("li", undefined, "This presentation will be in OCaml, but everything here should work in other languages with GADTs"))]))
                                      ])),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                        ReasonReact.element(undefined, undefined, Text$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["What can we do with GADTs?"])),
                                        ReasonReact.element(undefined, undefined, List$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["add invariants to data structures at a type level"]
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["restrict what values of a type can be passed into our functions"]
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["encode simple logic into the type system"]
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["enables certain run time representation optimizations"]
                                                          ]))
                                                ])),
                                        ReasonReact.element(undefined, undefined, Notes$BsSpectacle.make(/* array */["for the purposes of this talk, we will be focusing on #1 and #2"]))
                                      ])),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["An introduction to types in OCaml"]))])),
                              ReasonReact.element(undefined, undefined, CodeSlide$ReactTemplate.make("ocaml", "(* basic types include: int, float, string *)\ntype string_and_int = string * int\n\ntype int_operation = int -> int -> int\n\nlet add : int -> int -> int = fun x y -> x + y\nlet add (x : int) (y : int) : int = x + y\nlet add x y = x + y\nlet add = (+)\n\ntype 'a list\ntype 'a pair = 'a * 'a\n\nlet reduce_pair : ('a -> 'a -> 'a) -> 'a pair -> 'a =\n  fun f (x, y) -> f x y\n    \nlet f : type a. a list -> int = ...", /* array */[
                                        {
                                          loc: /* array */[
                                            0,
                                            2
                                          ],
                                          title: "Basic Types"
                                        },
                                        {
                                          loc: /* array */[
                                            3,
                                            4
                                          ],
                                          title: "Function Types"
                                        },
                                        {
                                          loc: /* array */[
                                            5,
                                            9
                                          ],
                                          title: "Function Definitions"
                                        },
                                        {
                                          loc: /* array */[
                                            10,
                                            15
                                          ],
                                          title: "Parametric Polymorphism"
                                        },
                                        {
                                          loc: /* array */[
                                            16,
                                            17
                                          ],
                                          title: "Universal Quantification"
                                        }
                                      ], undefined, undefined, /* array */[])),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["A Review of ADTs"]))])),
                              cons("Basic ADT", undefined, "type example =\n  | A\n  | B of int\n  | C of string * float\n\nlet something : example = C (\"hello\", 3.14)"),
                              cons("List ADT", undefined, "type 'a list =\n  | []\n  | (::) of 'a * 'a list\n\nlet empty : 'a list = []\nlet fibs : int list = [0; 1; 1; 2; 3; 5; 8; 13]"),
                              cons("Binary Tree ADT", Caml_option.some(Btree_adt_exampleDotPng), "type 'a btree =\n  | Leaf of 'a\n  | Branch of 'a * 'a btree * 'a btree\n\nlet sorted_tree : int btree =\nBranch (25, Branch (15, Leaf 5, Leaf 17), Leaf 64)"),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                        ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["Limitations of ADTs"])),
                                        ReasonReact.element(undefined, undefined, Notes$BsSpectacle.make(/* array */["ADTs are great, but since every constructor for an ADT has the exact same type, we can't reason about types encapsulated by ADT constructors"]))
                                      ])),
                              cons("ADT Expression Tree", undefined, "type value =\n  | Int of int\n  | Bool of bool\n\ntype exp =\n  | Value of value\n  | Not of exp\n  | And of exp * exp\n  | Add of exp * exp\n  | Equal of exp * exp"),
                              cons("Safety Issues", undefined, "(* 2 + 3 *)\nlet test 1 : exp =\n  Add (Value (Int 2), Value (Int 3))\n\n(* 5 && true *)\nlet test1 : exp =\n  And (Value (Int 5), Value (Bool true))\n\n(* 2 + (5 = 3) *)\nlet test2 : exp =\n  Add (Value (Int 2), Equal (Value (Int 5), Value (Int 3)))"),
                              ReasonReact.element(undefined, undefined, CodeSlide$ReactTemplate.make("ocaml", "(* 5 *)\nlet test1 : int exp = Value (Int, 5)\n\n(* 5 = 3 *)\nlet test2 : bool exp =Equal (Value (Int, 5), Value (Int, 3))\n\n(* type error *)\nlet test3 : _ exp =\n  Add (Value (Int, 10), Value (Bool, false))", /* array */[
                                        {
                                          loc: /* array */[
                                            0,
                                            5
                                          ],
                                          title: "If We Had Used a GADT..."
                                        },
                                        {
                                          loc: /* array */[
                                            6,
                                            10
                                          ],
                                          title: "If We Had Used a GADT..."
                                        }
                                      ], undefined, undefined, /* array */[])),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["Basic GADT Constructions"]))])),
                              cons("Type Witness", undefined, "type 'a witness =\n  | Int : int witness\n  | Float : float witness"),
                              cons("Recursive Type Witness", undefined, "type 'a witness =\n  | Int : int witness\n  | Float : float witness\n  | List : 'a witness -> ('a list) witness "),
                              cons("ADT Peano Numbers", undefined, "type peano =\n  | Zero\n  | Succ of peano\n\nlet zero = Zero\nlet one = Succ Zero\n...\nlet four = Succ (Succ (Succ (Succ Zero)))"),
                              ReasonReact.element(undefined, undefined, make(PeanoMl, /* array */[])),
                              ReasonReact.element(undefined, undefined, make(VectMl, /* array */[])),
                              ReasonReact.element(undefined, undefined, make(HlistMl, /* array */[])),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                        ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["\"Value Safe\" Functions Using GADTs"])),
                                        ReasonReact.element(undefined, undefined, Notes$BsSpectacle.make(/* array */[React.createElement("ul", undefined, React.createElement("li", undefined, "now that we have some basic GADTs, let's define some \"value safe functions\""), React.createElement("li", undefined, "value safe function = function with compile time limitations what values can be passed into it"), React.createElement("li", undefined, "now that we have exposed some type parameters from our ADT definitions using GADTs, we can express type level restrictions"))]))
                                      ])),
                              ReasonReact.element(undefined, undefined, make(Take_fiveMl, /* array */[])),
                              ReasonReact.element(undefined, undefined, make(Vect_reduceMl, /* array */[])),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["Adding Invariants to Data Structures"]))])),
                              ReasonReact.element(undefined, undefined, make(BbtreeMl, /* array */[])),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                        ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["Encoding Restrictions on Application Logic"])),
                                        ReasonReact.element(undefined, undefined, Notes$BsSpectacle.make(/* array */[React.createElement("ul", undefined, React.createElement("li", undefined, "let's move on to a more practical example that's a little easier to see how it can be useful"), React.createElement("li", undefined, "the problem and solution we will review is related to my work on Coda, and is an existing solution we use today to make our code safer"))]))
                                      ])),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                        ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, 3, undefined, undefined, /* array */["Problem: Block Validation"])),
                                        ReasonReact.element(undefined, undefined, List$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["blocks can be received in a variety of ways (in multiple code paths)"]
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, List$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                                            ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      /* array */["new blocks are gossiped over p2p network"]
                                                                    ])),
                                                            ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      /* array */["missing blocks are requested from neighbors"]
                                                                    ])),
                                                            ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      undefined,
                                                                      /* array */["..."]
                                                                    ]))
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["need to validate certain properties of blocks before we can safely do things with them"]
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["different actions require different validations"]
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["ordering of validation may be different in some code paths"]
                                                          ]))
                                                ])),
                                        ReasonReact.element(undefined, undefined, Notes$BsSpectacle.make(/* array */["INTRO: if you don't know what a blockchain is -- it's basically just a decentralized reverse link list data structure"]))
                                      ])),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                        ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, 2, undefined, undefined, /* array */["Naive Solution"])),
                                        ReasonReact.element(undefined, undefined, List$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["analyze all possible traversals through validation states (model validation as an FSM)"]
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["create an abstract, concretely equivalent type representations for each level validation in reachable validation states"]
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["redefine boilerplate functions for each type representation"]
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["populate our restricted functions with the correct type representation associated with the required level of validation"]
                                                          ]))
                                                ])),
                                        ReasonReact.element(undefined, undefined, Notes$BsSpectacle.make(/* array */[
                                                  React.createElement("p", undefined, "issues:"),
                                                  React.createElement("ul", undefined, React.createElement("li", undefined, "functions can't express optional validation at type level, meaning we need to provide a bunch of identity functions that define mappings between our abstract types for lowering validation"), React.createElement("li", undefined, "none of this scales well every arc in our FSM requires mapping functions and every state requires abstract types and boilerplate definitions"))
                                                ]))
                                      ])),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                        ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, 2, undefined, undefined, /* array */["A Better Solution"])),
                                        ReasonReact.element(undefined, undefined, List$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["expose each validation state as individual type parameters"]
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["implement a single function for each validation computation"]
                                                          ])),
                                                  ReasonReact.element(undefined, undefined, Curry.app(ListItem$BsSpectacle.make, [
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            undefined,
                                                            /* array */["use universal quantification in our restricted functions to express optional validation states"]
                                                          ]))
                                                ])),
                                        ReasonReact.element(undefined, undefined, Notes$BsSpectacle.make(/* array */["much better -- though let's start simple and just begin with implementing a single validation state"]))
                                      ])),
                              ReasonReact.element(undefined, undefined, make(Validation_singleMl, /* array */[])),
                              ReasonReact.element(undefined, undefined, make(Validation_multiMl, /* array */[])),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                        ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["Full Circle"])),
                                        ReasonReact.element(undefined, undefined, Text$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["Implementing an Expression Tree as a GADT"])),
                                        ReasonReact.element(undefined, undefined, Notes$BsSpectacle.make(/* array */["let's revisit the original example of expression trees"]))
                                      ])),
                              ReasonReact.element(undefined, undefined, make(ExpMl, /* array */[])),
                              ReasonReact.element(undefined, undefined, Slide$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[
                                        ReasonReact.element(undefined, undefined, Heading$BsSpectacle.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["Limitations of GADTs"])),
                                        ReasonReact.element(undefined, undefined, Notes$BsSpectacle.make(/* array */[React.createElement("ul", undefined, React.createElement("li", undefined, "often limits ability to do tail recursion"), React.createElement("li", undefined, "some techniques can require extra allocations for unused runtime values in order to express a proof"), React.createElement("li", undefined, "limited scope of applications compared to proper dependent types (but you can get it in your programming language todayi"))]))
                                      ]))
                            ]));
            }),
          /* initialState */init[/* initialState */10],
          /* retainedProps */init[/* retainedProps */11],
          /* reducer */init[/* reducer */12],
          /* jsElementWrapped */init[/* jsElementWrapped */13]
        ];
}

exports.s = s;
exports.Image = Image;
exports.Code = Code;
exports.InlineCode = InlineCode;
exports.make = make$1;
/* react Not a pure module */
