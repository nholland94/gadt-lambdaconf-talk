// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_string = require("bs-platform/lib/js/caml_string.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var CodeSlide$ReactTemplate = require("./CodeSlide.bs.js");

function string_fold(f, init, str) {
  var length = str.length;
  var _acc = init;
  var _i = 0;
  while(true) {
    var i = _i;
    var acc = _acc;
    if (i >= length) {
      return acc;
    } else {
      _i = i + 1 | 0;
      _acc = Curry._2(f, acc, Caml_string.get(str, i));
      continue ;
    }
  };
}

function f(acc, c) {
  if (c === /* "\n" */10) {
    return acc + 1 | 0;
  } else {
    return acc;
  }
}

function count_lines(param) {
  return string_fold(f, 1, param);
}

var component = ReasonReact.statelessComponent("BigCode");

function make(title, code, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              var ranges = /* array */[{
                  loc: /* array */[
                    0,
                    count_lines(code)
                  ],
                  title: title
                }];
              return ReasonReact.element(undefined, undefined, CodeSlide$ReactTemplate.make("ocaml", code, ranges, true, "big-code", /* array */[]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.string_fold = string_fold;
exports.count_lines = count_lines;
exports.component = component;
exports.make = make;
/* component Not a pure module */
